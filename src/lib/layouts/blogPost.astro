---
import { Fdate, SuperImg } from "$lib/components";
import { dev } from "$lib/env";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import { cn } from "$lib/utils";

type Props = {
  loading?: "lazy" | "eager";
  class?: string;
};


const { loading, class: cls } = Astro.props;

const getPosts = await getCollection("blog");

function sortPosts(posts: CollectionEntry<"blog">[]) {
  const filterDraftPosts = posts.filter((post) =>
    dev ? post : post.data.draft != true,
  );
  const sortedPosts = filterDraftPosts.sort(
    (fst, snd) => snd.data.pubon.getTime() - fst.data.pubon.getTime(),
  );

  return sortedPosts;
}

const blogs = sortPosts(getPosts);
---

<ul id="blogs" class={cn(cls)}>
  {
    blogs.map((d, i) => (
      <li class="border-muted-light md:border-none blog">
        <a
          href={`/blog/${d.slug}`}
          class="block overflow-hidden rounded"
          data-astro-prefetch
        >
          {d.data.img && (
            <figure class="overflow-hidden bg-black">
              <SuperImg
                src={d.data.img}
                loading={loading || i <= 3 ? "eager" : "lazy"}
                alt={`Thumbnail of the post ${d.data.title}`}
                width={540}
              />
            </figure>
          )}
          <div class="bg-black p-sm rounded relative z-[1]" class:list={[{"-mt-md": d.data.img}]}>
            <p class="font-semibold text-lg leading-snug">{d.data.title}</p>
            <Fdate
              date={d.data.pubon}
              class="block my-1 text-sm text-muted-light"
            />
            <p>{d.data.desc}</p>
          <sdiv>
        </a>
      </li>
    ))
  }
</ul>

<style>
  a[href] {
    text-decoration: none;
  }
  #blogs {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(min(320px, 100%), 1fr));
    gap: theme(spacing.sm);
  }
</style>
