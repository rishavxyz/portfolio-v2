---
import "@fontsource/oswald/400.css";
import "@fontsource/oswald/600.css";
import "@fontsource/oswald/700.css";
import "@fontsource/pt-serif";
import "@fontsource/ubuntu-mono";
import "@fontsource/roboto";

import type { CSSProperty } from "astro/types"
import { Header, Footer, SEO } from "$lib/components"
import { DESCRIPTION, TITLE } from '$lib/consts';
import { cn } from "$lib/utils";

import defaultImg from "@media/blog-placeholder-1.jpg";

type Props = {
	title?: string;
	desc?: string;
	img?: string;
	class?: string;
	style?: CSSProperty;
	background?: string;
	foreground?: string;
	seo?: {
		title?: string;
		desc?: string;
		img?: string;
		pubon?: Date;
		section?: string;
	};
};

const {
	class: className, background,
	foreground, seo = {
		title: TITLE,
		desc: DESCRIPTION,
		img: defaultImg.src,
		section: undefined,
		pubon: undefined
	}
} = Astro.props;
---

<!doctype html>
<html lang="en" class="scroll-smooth">
	<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width,initial-scale=1" />
	<meta name="content-theme" content="light dark" />
	<SEO
		title={seo.title ?? TITLE}
		desc={seo.desc ?? DESCRIPTION}
		img={seo.img ?? defaultImg.src}
		section={seo.section}
		pubon={seo.pubon}
	/>
	</head>

	<style>
		body::before {
			content: "";
			position: absolute;
			inset-inline: 0;
			height: 0;
			z-index: -1;
			background-image: linear-gradient(
				to bottom, var(--color, transparent), transparent
			);
			will-change: height;
		}
		@keyframes slide {
			from { height: 0vh; }
			to { height: 70vh; }
		}
	</style>

	<body class={
		cn("text-base bg-black text-white",
		background, foreground)}
	>
		<Header />
		<main class={cn("p-4", className)}>
			<slot />
		</main>
		<Footer />
	</body>	
</html>

<style is:global>
	.mark {
		background-color: #FFFF00;
		color: black;
	}
	.label {
		text-transform: uppercase;
		letter-spacing: theme(letterSpacing.wide);
		font-size: theme(fontSize.sm);
	}
	a, button {
		text-underline-offset: 5px;
		text-decoration-thickness: 1px;
	}
	button, a[role=button], .btn {
		@apply inline-flex items-center justify-center gap-x-2 text-sm rounded-md px-4 py-2
			ring-transparent border-2 border-transparent
			disabled:text-muted-light disabled:bg-muted-dark
			focus:outline-none focus:border-2;
	}
	button.inline, .btn.inline {
		padding: 0;
		font-size: theme(fontSize.base);
	}
	button.small, .btn.small {
		font-weight: 400;
		padding-inline: theme(padding[3]);
		padding-block: theme(padding[1]);
	}
	button.pill, .btn.pill {
		border-radius: 999px;
	}
	.heading {
		@apply text-4xl leading-none font-bold font-display;
	}
	input[type=]:not([type*="c"]), textarea {
		@apply block w-full rounded-md border-0 px-4 py-2 bg-muted-dark text-white
			ring-1 ring-inset ring-muted-light/60 placeholder:text-muted-light
			disabled:text-muted-light/60 disabled:placeholder:text-muted-light/60
			disabled:bg-muted-dark/60 disabled:ring-muted-dark
			focus:ring-2 focus:ring-inset focus:ring-primary
			focus:outline-none focus:border-0;
	}
	textarea {
		line-height: 1.5;
	}
</style>
