---
import type { MarkdownHeading } from "astro";
import type { TableOfContent } from "$lib/types";
import type { AstroComponentFactory } from "astro/runtime/server/index.js";

import Table from "./Table.astro";
import ShowTOC from "./showTOC.svelte";
import { cn } from "$lib/utils";

type Render = {
  Content: AstroComponentFactory;
  headings: MarkdownHeading[];
};

type Props = {
  render: () => Promise<Render>;
  class?: string;
};

const { render, class: className } = Astro.props;

const { Content, headings } = await render();

console.log({ headings });

let toc: TableOfContent[] = [];

headings?.forEach((heading) => {
  switch (heading.depth) {
    case 1:
      toc.push(heading);
      break;
    case 2:
      toc.push(heading);
      break;
    case 3:
      toc.push([heading]);
      break;
    case 4:
      toc.push([[heading]]);
      break;
    case 5:
      toc.push([[[heading]]]);
      break;
    case 6:
      toc.push([[[[heading]]]]);
      break;
  }
});
---

<ShowTOC contents={toc} client:load />

<article class={cn("prose prose-lg md:prose-xl", "font-serif", className)}>
  <Content components={{ table: Table }} />
</article>
