/* empty css                          */
import { e as createAstro, f as createComponent, r as renderTemplate, j as renderComponent, m as maybeRenderHead } from '../astro_CZkCPpGC.mjs';
import 'marked';
import { $ as $$Layout, a as $$BlogPost, A as AUTHOR, D as DESCRIPTION } from './__CX0p1IGG.mjs';
/* empty css                          */

/** @returns {void} */

function run(fn) {
	return fn();
}

function blank_object() {
	return Object.create(null);
}

/**
 * @param {Function[]} fns
 * @returns {void}
 */
function run_all(fns) {
	fns.forEach(run);
}

let current_component;

/** @returns {void} */
function set_current_component(component) {
	current_component = component;
}

const ATTR_REGEX = /[&"]/g;
const CONTENT_REGEX = /[&<]/g;

/**
 * Note: this method is performance sensitive and has been optimized
 * https://github.com/sveltejs/svelte/pull/5701
 * @param {unknown} value
 * @returns {string}
 */
function escape(value, is_attr = false) {
	const str = String(value);
	const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;
	pattern.lastIndex = 0;
	let escaped = '';
	let last = 0;
	while (pattern.test(str)) {
		const i = pattern.lastIndex - 1;
		const ch = str[i];
		escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : ch === '"' ? '&quot;' : '&lt;');
		last = i + 1;
	}
	return escaped + str.substring(last);
}

let on_destroy;

/** @returns {{ render: (props?: {}, { $$slots, context }?: { $$slots?: {}; context?: Map<any, any>; }) => { html: any; css: { code: string; map: any; }; head: string; }; $$render: (result: any, props: any, bindings: any, slots: any, context: any) => any; }} */
function create_ssr_component(fn) {
	function $$render(result, props, bindings, slots, context) {
		const parent_component = current_component;
		const $$ = {
			on_destroy,
			context: new Map(context || (parent_component ? parent_component.$$.context : [])),
			// these will be immediately discarded
			on_mount: [],
			before_update: [],
			after_update: [],
			callbacks: blank_object()
		};
		set_current_component({ $$ });
		const html = fn(result, props, bindings, slots);
		set_current_component(parent_component);
		return html;
	}
	return {
		render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {
			on_destroy = [];
			const result = { title: '', head: '', css: new Set() };
			const html = $$render(result, props, {}, $$slots, context);
			run_all(on_destroy);
			return {
				html,
				css: {
					code: Array.from(result.css)
						.map((css) => css.code)
						.join('\n'),
					map: null // TODO
				},
				head: result.title + result.head
			};
		},
		$$render
	};
}

/** @returns {string} */
function add_attribute(name, value, boolean) {
	if (value == null || (boolean && !value)) return '';
	const assignment = boolean && value === true ? '' : `="${escape(value, true)}"`;
	return ` ${name}${assignment}`;
}

/* src/lib/layouts/content/metaFields.svelte generated by Svelte v4.2.11 */

const MetaFields = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let title = "";
	let description = "";

	return `<form class="space-y-2 max-w-prose mx-auto p-1"><div> <div class="flex justify-between items-end mb-0.25"><label for="input-title" class="block font-medium dark:text-white" data-svelte-h="svelte-6857h">Title</label> <span class="text-xs font-medium py-0.125 px-0.25 bg-white/10 rounded-full">Characters: ${escape(title.trim().length)}</span></div> <input type="text" minlength="15" maxlength="60" id="input-title" class="px-1 py-0.5 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-muted/20 dark:border-gray-500 dark:focus:ring-gray-600" placeholder="Title" autocomplete="off"${add_attribute("value", title, 0)}>  <div class="flex rounded-lg shadow-sm mt-0.25"><input type="text" ${"disabled" }${add_attribute("value", title.trim().toLowerCase().replaceAll(/\'|\*|\!|\:|\-\s|\"|\,|\.|\?/g, "").split(" ").join("-"), 0)} id="hs-trailing-multiple-add-on" name="inline-add-on" class="font-mono px-1 py-0.5 block w-full border-gray-200 shadow-sm rounded-lg rounded-e-none text-sm focus:z-10 focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-muted/20 dark:border-gray-500 dark:focus:ring-gray-600" placeholder="my-file-name" autocomplete="off"> <div class="px-1 inline-flex items-center min-w-fit rounded-e-md border border-s-0 border-gray-200 bg-gray-50 dark:bg-gray-700 dark:border-gray-600" data-svelte-h="svelte-cd1v8i"><span class="text-sm text-white">.md</span></div></div></div>  <div><div class="flex justify-between items-end mb-0.25"><label for="input-desc" class="block font-medium dark:text-white" data-svelte-h="svelte-11htr6a">Description</label> <span class="text-xs font-medium py-0.125 px-0.25 bg-white/10 rounded-full">Characters: ${escape(description.trim().length)}</span></div> <textarea id="input-desc" minlength="55" maxlength="155" rows="3" class="p-1 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-muted/20 dark:border-gray-500 dark:focus:ring-gray-600" placeholder="A description within 155 characters" autocomplete="off">${escape("")}</textarea></div>  <div><div class="flex justify-between items-end mb-0.25"><label for="textarea-label" class="block font-medium dark:text-white" data-svelte-h="svelte-vv682z">Content <span class="text-white/80 text-sm">(Supports markdown)</span></label> <span class="text-xs font-medium py-0.125 px-0.25 bg-white/10 rounded-full">Words: ${escape(0)}</span></div> <textarea id="textarea-label" class="p-1 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-muted/20 dark:border-gray-500 dark:focus:ring-gray-600" rows="12" placeholder="Write your content with markdown :)" autocomplete="off">${escape("")}</textarea></div></form> <div class="bg-white py-2 px-1"><article class="mx-auto min-h-3 prose prose-lg md:prose-xl font-serif max-h-[90vh] overflow-y-scroll">${`<p data-svelte-h="svelte-yff36d">Markdown content will appear here</p>`}</article></div>`;
});

const $$Astro$2 = createAstro("https://v2.rishavmandal.xyz");
const $$Index$2 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$2, $$props, $$slots);
  Astro2.self = $$Index$2;
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "class": "p-0 space-y-1" }, { "default": ($$result2) => renderTemplate` ${renderComponent($$result2, "MetaFields", MetaFields, { "client:load": true, "client:component-hydration": "load", "client:component-path": "/home/rain/projects/portfolio-astro/src/lib/layouts/content/metaFields.svelte", "client:component-export": "default" })} ` })}`;
}, "/home/rain/projects/portfolio-astro/src/pages/@/create/index.astro", void 0);

const $$file$2 = "/home/rain/projects/portfolio-astro/src/pages/@/create/index.astro";
const $$url$2 = "/@/create";

const index$2 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: $$Index$2,
	file: $$file$2,
	url: $$url$2
}, Symbol.toStringTag, { value: 'Module' }));

const $$Astro$1 = createAstro("https://v2.rishavmandal.xyz");
const $$Index$1 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$1, $$props, $$slots);
  Astro2.self = $$Index$1;
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "class": "space-y-2" }, { "default": ($$result2) => renderTemplate` ${maybeRenderHead()}<section class="space-y-1 max-w-5xl mx-auto"> <p class="uppercase tracking-wide text-sm">Latest blogs</p> ${renderComponent($$result2, "BlogPost", $$BlogPost, {})} </section> ` })}`;
}, "/home/rain/projects/portfolio-astro/src/pages/blog/index.astro", void 0);

const $$file$1 = "/home/rain/projects/portfolio-astro/src/pages/blog/index.astro";
const $$url$1 = "/blog";

const index$1 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: $$Index$1,
	file: $$file$1,
	url: $$url$1
}, Symbol.toStringTag, { value: 'Module' }));

const $$Astro = createAstro("https://v2.rishavmandal.xyz");
const $$Index = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$Index;
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "class": "space-y-2", "data-astro-cid-j7pv25f6": true }, { "default": ($$result2) => renderTemplate` ${maybeRenderHead()}<section class="max-w-5xl mx-auto space-y-1" data-astro-cid-j7pv25f6> <h1 class="text-3xl md:text-6xl leading-none font-bold font-display uppercase" data-astro-cid-j7pv25f6>${AUTHOR}</h1> <h2 class="text-xl md:text-3xl leading-tight font-serif" data-astro-cid-j7pv25f6>${DESCRIPTION}.</h2> </section> <section class="space-y-1 max-w-5xl mx-auto" data-astro-cid-j7pv25f6> <p class="uppercase tracking-wide text-sm" data-astro-cid-j7pv25f6>Latest blogs</p> ${renderComponent($$result2, "BlogPost", $$BlogPost, { "data-astro-cid-j7pv25f6": true })} </section> ` })}  `;
}, "/home/rain/projects/portfolio-astro/src/pages/index.astro", void 0);

const $$file = "/home/rain/projects/portfolio-astro/src/pages/index.astro";
const $$url = "";

const index = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: $$Index,
	file: $$file,
	url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

export { index$1 as a, index as b, index$2 as i };
